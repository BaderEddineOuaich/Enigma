# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = Source/pch.hpp
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = Bin/Debug-windows-x86_64/Enigma
TARGET = $(TARGETDIR)/Enigma.exe
OBJDIR = Bin-Intermediate/Debug-windows-x86_64/Enigma
DEFINES += -DENIGMA_PLATFORM_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DENIGMA_DEBUG
INCLUDES += -ISource -IDependencies/spdlog/include -IDependencies/glfw/include -IDependencies/glad/include -IDependencies/imgui -IDependencies/pfd/include -IDependencies/stb_image/include -IDependencies/cxxopts/include -IDependencies/cryptopp -IDependencies/catch2/src
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17
LIBS += Dependencies/glfw/Bin/Debug-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Debug-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Debug-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Debug-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Debug-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Debug-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Debug-windows-x86_64/cryptopp/cryptopp.lib Dependencies/catch2/Bin/Debug-windows-x86_64/catch2/catch2.lib -lopengl32
LDDEPS += Dependencies/glfw/Bin/Debug-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Debug-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Debug-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Debug-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Debug-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Debug-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Debug-windows-x86_64/cryptopp/cryptopp.lib Dependencies/catch2/Bin/Debug-windows-x86_64/catch2/catch2.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = Bin/Release-windows-x86_64/Enigma
TARGET = $(TARGETDIR)/Enigma.exe
OBJDIR = Bin-Intermediate/Release-windows-x86_64/Enigma
DEFINES += -DENIGMA_PLATFORM_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DENIGMA_RELEASE
INCLUDES += -ISource -IDependencies/spdlog/include -IDependencies/glfw/include -IDependencies/glad/include -IDependencies/imgui -IDependencies/pfd/include -IDependencies/stb_image/include -IDependencies/cxxopts/include -IDependencies/cryptopp
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += Dependencies/glfw/Bin/Release-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Release-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Release-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Release-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Release-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Release-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Release-windows-x86_64/cryptopp/cryptopp.lib -lopengl32
LDDEPS += Dependencies/glfw/Bin/Release-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Release-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Release-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Release-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Release-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Release-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Release-windows-x86_64/cryptopp/cryptopp.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = Bin/Dist-windows-x86_64/Enigma
TARGET = $(TARGETDIR)/Enigma.exe
OBJDIR = Bin-Intermediate/Dist-windows-x86_64/Enigma
DEFINES += -DENIGMA_PLATFORM_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DENIGMA_DIST
INCLUDES += -ISource -IDependencies/spdlog/include -IDependencies/glfw/include -IDependencies/glad/include -IDependencies/imgui -IDependencies/pfd/include -IDependencies/stb_image/include -IDependencies/cxxopts/include -IDependencies/cryptopp
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O3 -std=c++17
LIBS += Dependencies/glfw/Bin/Dist-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Dist-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Dist-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Dist-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Dist-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Dist-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Dist-windows-x86_64/cryptopp/cryptopp.lib -lopengl32
LDDEPS += Dependencies/glfw/Bin/Dist-windows-x86_64/glfw/glfw.lib Dependencies/glad/Bin/Dist-windows-x86_64/glad/glad.lib Dependencies/imgui/Bin/Dist-windows-x86_64/imgui/imgui.lib Dependencies/spdlog/Bin/Dist-windows-x86_64/spdlog/spdlog.lib Dependencies/stb_image/Bin/Dist-windows-x86_64/stb_image/stb_image.lib Dependencies/cxxopts/Bin/Dist-windows-x86_64/cxxopts/cxxopts.lib Dependencies/cryptopp/Bin/Dist-windows-x86_64/cryptopp/cryptopp.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

CUSTOM :=
GENERATED :=
OBJECTS :=

CUSTOM += $(OBJDIR)/resources.res
GENERATED += $(OBJDIR)/AES.o
GENERATED += $(OBJDIR)/Algorithm.o
GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/Base64.o
GENERATED += $(OBJDIR)/CLI.o
GENERATED += $(OBJDIR)/ChaCha20.o
GENERATED += $(OBJDIR)/Clipboard.o
GENERATED += $(OBJDIR)/Cursor.o
GENERATED += $(OBJDIR)/DecryptFileScene.o
GENERATED += $(OBJDIR)/DecryptTextScene.o
GENERATED += $(OBJDIR)/EncryptFileScene.o
GENERATED += $(OBJDIR)/EncryptTextScene.o
GENERATED += $(OBJDIR)/Enigma.o
GENERATED += $(OBJDIR)/GZip.o
GENERATED += $(OBJDIR)/IDEA.o
GENERATED += $(OBJDIR)/ImGuiImpl.o
GENERATED += $(OBJDIR)/ImGuiRenderer.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/Logger.o
GENERATED += $(OBJDIR)/MainMenuScene.o
GENERATED += $(OBJDIR)/MessageBox.o
GENERATED += $(OBJDIR)/Notification.o
GENERATED += $(OBJDIR)/OpenFileDialog.o
GENERATED += $(OBJDIR)/RAMInfo.o
GENERATED += $(OBJDIR)/Random.o
GENERATED += $(OBJDIR)/SaveFileDialog.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SelectFolderDialog.o
GENERATED += $(OBJDIR)/TripleDES.o
GENERATED += $(OBJDIR)/Twofish.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/pch.o
GENERATED += $(OBJDIR)/resources.res
OBJECTS += $(OBJDIR)/AES.o
OBJECTS += $(OBJDIR)/Algorithm.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Base64.o
OBJECTS += $(OBJDIR)/CLI.o
OBJECTS += $(OBJDIR)/ChaCha20.o
OBJECTS += $(OBJDIR)/Clipboard.o
OBJECTS += $(OBJDIR)/Cursor.o
OBJECTS += $(OBJDIR)/DecryptFileScene.o
OBJECTS += $(OBJDIR)/DecryptTextScene.o
OBJECTS += $(OBJDIR)/EncryptFileScene.o
OBJECTS += $(OBJDIR)/EncryptTextScene.o
OBJECTS += $(OBJDIR)/Enigma.o
OBJECTS += $(OBJDIR)/GZip.o
OBJECTS += $(OBJDIR)/IDEA.o
OBJECTS += $(OBJDIR)/ImGuiImpl.o
OBJECTS += $(OBJDIR)/ImGuiRenderer.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/Logger.o
OBJECTS += $(OBJDIR)/MainMenuScene.o
OBJECTS += $(OBJDIR)/MessageBox.o
OBJECTS += $(OBJDIR)/Notification.o
OBJECTS += $(OBJDIR)/OpenFileDialog.o
OBJECTS += $(OBJDIR)/RAMInfo.o
OBJECTS += $(OBJDIR)/Random.o
OBJECTS += $(OBJDIR)/SaveFileDialog.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SelectFolderDialog.o
OBJECTS += $(OBJDIR)/TripleDES.o
OBJECTS += $(OBJDIR)/Twofish.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/pch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(CUSTOM) $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Enigma
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Enigma
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

$(CUSTOM): | prebuild
ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/resources.res: resources.rc
	@echo $(notdir $<)
	$(SILENT) $(RESCOMP) $< -O coff -o "$@" $(ALL_RESFLAGS)
$(OBJDIR)/AES.o: Source/Algorithm/AES/AES.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Algorithm.o: Source/Algorithm/Algorithm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ChaCha20.o: Source/Algorithm/ChaCha20/ChaCha20.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IDEA.o: Source/Algorithm/IDEA/IDEA.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TripleDES.o: Source/Algorithm/TripleDES/TripleDES.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Twofish.o: Source/Algorithm/Twofish/Twofish.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RAMInfo.o: Source/Analytics/Hardware/RAM/RAMInfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: Source/Application/Application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CLI.o: Source/CLI/CLI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Enigma.o: Source/Enigma.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: Source/Input/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Logger.o: Source/Logger/Logger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DecryptFileScene.o: Source/Scenes/DecryptFileScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DecryptTextScene.o: Source/Scenes/DecryptTextScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EncryptFileScene.o: Source/Scenes/EncryptFileScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EncryptTextScene.o: Source/Scenes/EncryptTextScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MainMenuScene.o: Source/Scenes/MainMenuScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: Source/Scenes/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Clipboard.o: Source/System/Clipboard/Clipboard.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MessageBox.o: Source/System/Dialogs/MessageBox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenFileDialog.o: Source/System/Dialogs/OpenFileDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SaveFileDialog.o: Source/System/Dialogs/SaveFileDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SelectFolderDialog.o: Source/System/Dialogs/SelectFolderDialog.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Notification.o: Source/System/Notification/Notification.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiImpl.o: Source/UI/ImGui/ImGuiImpl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiRenderer.o: Source/UI/ImGui/ImGuiRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Base64.o: Source/Utility/Base64.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GZip.o: Source/Utility/GZip.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Random.o: Source/Utility/Random.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Cursor.o: Source/Window/Cursor/Cursor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: Source/Window/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: Source/pch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif